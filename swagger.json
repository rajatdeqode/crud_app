{
  "swagger": "2.0",
  "info": {
    "title": "Node.js CRUD application",
    "description": "Node.js CRUD application using typescript",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "API's for users to create retrieve update and delete"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/post": {
      "post": {
        "tags": ["User"],
        "summary": "Add user",
        "description": "Add user to the system",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/adduser"
            }
          }
        ],
        "responses": [
          {
            "200": {
              "description": "User created succesfully"
            }
          },
          {
            "500": {
              "description": "Server error "
            }
          }
        ]
      }
    },
    "/get": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Get all users from system",
        "produces": ["application/json"],
        "responses": [
          {
            "200": {
              "description": "Get all users"
            },
            "500": {
              "description": "Server error"
            }
          }
        ]
      }
    },
    "/update/{id}": {
      "put": {
        "security":[{
          "Bearer": []
        }],
        "tags": ["User"],
        "summary": "Update user"
      },
      "produces": ["application/json"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of body",
          "required": true,
          "type": "string"
        },
        {
          "in": "body",
          "name": "body",
          "description": "update user Record",
          "required": true,
          "schema": {
            "$ref": "#/definitions/updateRecord"
          }
        }
      ],
      "responses": [
        {
          "200": {
            "description": "User updated succesfully"
          }
        },
        {
          "500": {
            "description": "Server error"
          }
        }
      ]
    },
    "/delete/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "delete user",
        "description": "Delete user from system"
      },
      "produces": ["application/json"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of body",
          "required": true,
          "type": "string"
        }
      ],
      "responses": [
        {
          "200": {
            "description": "user deleted succesfully"
          }
        },
        {
          "500": {
            "description": "Server error"
          }
        }
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "auth",
      "in": "header"
    }
  },
  "definitions": {
    "adduser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        },
        "password": {
          "type": "string",
          "required": true
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "updateRecord": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
